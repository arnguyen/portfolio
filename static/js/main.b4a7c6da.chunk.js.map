{"version":3,"sources":["welcome.js","about.js","experience.js","skills.js","resume.js","contact.js","portfolio.js","serviceWorker.js","index.js"],"names":["Intro","id","onInit","typewriter","typeString","pauseFor","start","About","props","state","src","alt","React","Component","Experience","Skills","className","count","value","size","activeColor","edit","Resume","title","href","download","Contact","HEADER_OPTIONS","Portfolio","changeTheme","theme","setState","changeView","e","activeView","target","this","activeTheme","map","item","i","key","classNames","type","onClick","onChange","checked","checkedIcon","onColor","uncheckedIcon","offColor","view","renderHeader","renderView","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b4a7c6da.chunk.js","sourcesContent":["import React from 'react';\nimport Typewriter from 'typewriter-effect';\nimport './welcome.css';\n\nfunction Intro() {\n    return (\n      <div id=\"welcome\">\n        <Typewriter\n          onInit={(typewriter) => {\n            typewriter.typeString('Hello. ')\n              .pauseFor(1000)\n              .start();\n            typewriter.typeString(\"I'm Andrew. \")\n              .pauseFor(1000)\n              .start()\n            typewriter.typeString(\"It's nice to meet you.\")\n              .pauseFor(1000)\n              .start()\n          }}\n        />\n      </div>\n    )\n}\n\nexport default Intro;","import React from 'react';\nimport './about.css';\n\nclass About extends React.Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {}\n  }\n\n  render() {\n    return (\n      <div id=\"about\">\n        <img id=\"my-pic\" src=\"mainpic.jpg\" alt='My pic' />\n        <p>\n          Hello! It&apos;s great to meet you. I&apos;m Andrew, a junior studying computer science at the University of Michigan. \n          My passion for computer science and programming actually started when I took my very first programming course, and \n          fell in love with it! Through my time in school, I have taken a wide variety of interesting CS courses, including \n          those learning about different data structures and algorithms, and one where I got to work with python and Spotify API \n          data to create unique data visualizations. Funny enough however, my favorite class I&apos;ve taken had nothing to do \n          with CS, and was about classic civilizations!\n        </p>\n        <p>\n          Outside of my classes, I&apos;ve been involved in numerous student organizations on campus, including a few of my favorites,\n          the Alternate Reality Initiative, where I got to work extensively with UX and virtual reality, the Michigan Business Club,\n          where I was able to expand my interests in learning about different aspects of business, and of course, the time I got to \n          work as a research assistant studying behavioral game theory! \n        </p>\n        <p>\n          Through my experiences at school, I&apos;ve gained a deep interests in more theoretical fields of technology such as \n          machine learning and artifical intelligence. I&apos;ve also developed strong interests in virtual reality as well \n          as front-end web development, where I get to work on desiging strong user experiences. \n        </p>\n        <p>\n          When I&apos;m not working, I like to spend time with healthy practices like running and working out, as well as reading \n          and meditating. Of course, I have quite a strong sweet tooth, and enjoy baking as well. On the more creative side,\n          I&apos;ve recently taken up drawing! \n        </p>\n        <p>\n          Feel free to ask me about any of my interests, technical or otherwise! \n        </p>\n        <p>\n          -Andrew\n        </p>\n      </div> \n    );\n  }\n}\n\nexport default About;","import React from 'react';\n\nclass Experience extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    render() {\n        return (\n          <div id=\"experience\">\n            <p>\n              I have worked at Amazon.\n            </p>\n          </div> \n        )\n    }\n}\n\nexport default Experience;","import React from 'react';\nimport ReactStars from \"react-rating-stars-component\";\n\nclass Skills extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    render() {\n        return (\n          <div id=\"skills\">\n            <div className=\"software-skills\">\n              <h2>Software Skills</h2>\n              <p className=\"col-1\">\n                C\n                <ReactStars\n                  count={5}\n                  value={3}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n                C++\n                <ReactStars\n                  count={5}\n                  value={4}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n                Python\n                <ReactStars\n                  count={5}\n                  value={3}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n                JavaScript\n                <ReactStars\n                  count={5}\n                  value={3}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n                HTML\n                <ReactStars\n                  count={5}\n                  value={4}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n              </p>\n              <p className=\"col-2\">\n                CSS\n                <ReactStars\n                  count={5}\n                  value={4}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n                Sass\n                <ReactStars\n                  count={5}\n                  value={4}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n                React Js\n                <ReactStars\n                  count={5}\n                  value={3}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n                Flux\n                <ReactStars\n                  count={5}\n                  value={2}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n                Redux\n                <ReactStars\n                  count={5}\n                  value={1}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n              </p>\n            </div>\n            <div className=\"software-tools\">\n              <h2>Software Tools</h2>\n              <p className=\"col-1\">\n                Git\n                <ReactStars\n                  count={5}\n                  value={3}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n                Visual Studio\n                <ReactStars\n                  count={5}\n                  value={2}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n                VS Code\n                <ReactStars\n                  count={5}\n                  value={3}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n              </p>\n              <p className=\"col-2\">\n                Chrome Developer Tools\n                <ReactStars\n                  count={5}\n                  value={3}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n                Atlassian/Jira\n                <ReactStars\n                  count={5}\n                  value={3}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n              </p>\n            </div>\n            <div className=\"languages\">\n              <h2>Languages</h2>\n              <p className=\"col-1\">\n                English\n                <ReactStars\n                  count={5}\n                  value={5}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n                Cantonese\n                <ReactStars\n                  count={5}\n                  value={2}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n              </p>\n              <p className=\"col-2\">\n                French\n                <ReactStars\n                  count={5}\n                  value={2}\n                  size={24}\n                  activeColor=\"#ffd700\"\n                  edit={false}\n                />\n              </p>\n            </div>\n          </div> \n        )\n    }\n}\n\nexport default Skills;","import React from 'react';\nimport './resume.css';\n\nclass Resume extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {}\n    }\n\n    render() {\n        return (\n          <div id=\"resume\">\n            <iframe src=\"Nguyen-Andrew-Resume.pdf\" title=\"resume\" />\n            <p>\n              Also feel free to download my resume&nbsp;\n              <a href=\"Nguyen-Andrew-Resume.pdf\" download>\n                here\n              </a>\n              .    \n            </p>\n          </div> \n        )\n    }\n}\n\nexport default Resume;","import React from 'react';\nimport './contact.css';\n\nclass Contact extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state ={}\n    }\n\n    render() {\n        return (\n          <div id=\"contact\">\n            <a href=\"mailto:ngandrew@umich.edu\">ngandrew@umich.edu</a>\n            <br />\n            <a href=\"tel:248-904-3173\">248-904-3173</a>\n            <br />\n            <a href=\"https://www.linkedin.com/in/andrew-nguyen-084279179/\">LinkedIn</a>\n            <br />\n            <a href=\"https://github.com/arnguyen\">Github</a>\n          </div>\n        )\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport classNames from 'classnames';\nimport Switch from 'react-switch';\nimport './portfolio.css';\nimport Welcome from './welcome';\nimport About from './about';\nimport Experience from './experience';\nimport Skills from './skills';\nimport Resume from './resume';\nimport Contact from './contact';\n\nconst HEADER_OPTIONS = ['Welcome', 'About', 'Experience', 'Skills', 'Resume', 'Contact']\n\nclass Portfolio extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n          theme: 'light',\n          activeView: 'Welcome',\n      };\n  }\n\n  changeTheme = () => {\n    const { theme } = this.state;\n\n    if (theme === 'light') {\n        this.setState({ theme: 'dark' });\n    } else {\n        this.setState({ theme: 'light' });\n    }\n  };\n\n  changeView = (e) => {\n    this.setState({ activeView: e.target.value });\n  };\n\n  renderHeader() {\n    const { theme, activeView } = this.state;\n\n    const activeTheme = theme === \"light\" ? \"Light Mode\" : \"Dark Mode\";\n\n    return (\n      <div className=\"header\">\n        <ul>\n          {\n            HEADER_OPTIONS.map((item, i) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <li key={i}>\n                <button\n                  className={classNames('header-option', activeView === item ? 'active-view': 'hidden')}\n                  type=\"button\"\n                  value={item}\n                  onClick={this.changeView}\n                >\n                  {item}\n                </button>\n              </li>\n            ))\n          }\n        </ul>\n        <p>{activeTheme}</p>\n        <Switch\n          onChange={this.changeTheme}\n          checked={theme === 'light'}\n          checkedIcon={false}\n          onColor=\"#87ceeb\"\n          uncheckedIcon={false}\n          offColor=\"#000080\"\n        />\n      </div>\n    );\n  }\n\n  renderView() {\n    const { activeView } = this.state;\n\n    let view;\n\n    switch(activeView) {\n      case 'About':\n        view = <About />;\n        break;\n      case 'Experience':\n        view = <Experience />;\n        break;\n      case 'Skills':\n        view = <Skills />;\n        break;\n      case 'Resume':\n        view = <Resume />;\n        break;\n      case 'Contact':\n        view = <Contact />;\n        break;\n      default:\n        view = <Welcome />;\n        break;\n    }\n\n    return view;\n  }\n\n  render() {\n    const { theme } = this.state;\n\n    return (\n      <div className={classNames('portfolio', theme)}>\n        {this.renderHeader()}\n        {this.renderView()}\n      </div>\n    );\n  }\n}\n\nexport default Portfolio;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Portfolio from './portfolio';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Portfolio />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}